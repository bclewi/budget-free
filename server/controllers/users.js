const db = require("../models");
const User = db.users;
const Op = db.Sequelize.Op;

/* 
---------------------------------------------
CREATE NEW USER
---------------------------------------------
*/
exports.create = (req, res) => {
    // Validation
    if (!req.body.username || !req.body.email || !req.body.hashedPassword) {
        res.status(400).send({ message: 'Null fields are not allowed.' });
        return;
    }

    const user = {
        // id is autogenerated
        username: req.body.username,
        email: req.body.email,
        hashedPassword: req.body.hashedPassword
    };

    // Save user to database
    User.create(user)
        .then(data => {
            res.send(data);
        })
        .catch(err => {
            res.status(500).send({ message: err.message || 'An error occurred while creating the user.' });
        });

};


/* 
---------------------------------------------
READ USER BY ID
---------------------------------------------
*/
exports.read = (req, res) => {
    const id = req.params.id;

    User.findByPk(id)
    .then(data => {
        res.send(data);
    })
    .catch(err => {
        res.status(500).send({ message: `Error retrieving user with id = ${id}` });
    });
  
};

/* 
---------------------------------------------
UPDATE USER BY ID
---------------------------------------------
*/
exports.update = (req, res) => {
    const id = req.params.id;

    User.update(req.body, {
        where: { id: id }
    })
    .then(num => {
        if (num ==1) { res.send({message: 'User updated.'}); } 
        else { res.send({message: `Could not update user with id = ${id}`}); }
    })
    .catch(err => {
        res.status(500).send({message: `Error updating user with id = ${id}`});
    });

};

/* 
---------------------------------------------
DELETE USER BY ID
---------------------------------------------
*/
exports.delete = (req, res) => {
    const id = req.params.id;
  
    User.destroy({
      where: { id: id }
    })
      .then(num => {
        if (num == 1) {
          res.send({ message: "User deleted" });
        } else {
          res.send({ message: `Cannot delete user with id = ${id}.` });
        }
      })
      .catch(err => {
        res.status(500).send({ message: `Cannot delete user with id = ${id}.` });
      });
      
  };

  